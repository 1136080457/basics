<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="my"> <!-- namespace：名称空间 -->
	<!-- 如果表的字段名和属性名一样，下面的映射可以不用写 -->
	<resultMap type="one.emp" id="mymapping">	<!-- type:映射的实体类(全路径)；id:取一个名字 -->
		<id property="id" column="eid"/>	<!-- id表示主键，property是实体类的属性，column是对应数据的字段 -->
		<result property="name" column="ename"/>
		<result property="age" column="eage"/> 	<!-- result代表普通字段 -->
	</resultMap>
	
	<resultMap type="one.empl" id="empl">
		<id property="eid" column="eid"/>
		<result property="ename" column="ename"/>
		<result property="eage" column="eage"/>
	</resultMap>
	
	
	<insert id="in1"> <!-- 插入语句标签；取的名字 -->
		insert into emp (eid,ename,eage) values (22,'ibatis',22);
	</insert>
	<insert id="in2" parameterType="one.emp"> <!-- parametertype:方法的参数(没有参数，可以不用写)，如果是类，就要写全名 -->
		insert into emp (eid,ename,eage) values (#{id},#{name},#{age}); <!-- #{id}:表示对应的get方法 -->
	</insert>
	
	<delete id="de1">
		delete from emp where eid = 5;
	</delete>
	
	<update id="up1" parameterType="one.emp">
		update emp set ename = #{name} where eid = #{id};
	</update>
	<!-- 使用查询时，实体类的属性名必须和表的字段名一样(否则需要用别名) -->
	<select id="se1" parameterType="int" resultType="one.empl">	 <!-- parameterType：如果方法的参数是普通的类型，就直接写；resultType：方法返回值的类型，没有返回值也不用写 -->
		select eid,ename,eage from emp where eid = #{id};	<!-- 参数是普通的参数，#{这里可以随便写} -->
	</select>
	<select id="se2" resultType="one.empl">	<!-- 属性名和字段名相同 -->
		select eid,ename,eage from emp;
	</select>
	<select id="se3" resultType="one.emp">  <!-- 属性名和字段名不一样要用别名 -->
		select ename as name,eid as id,eage as age from emp where eid = 1;
	</select>
	<select id="se4" parameterType="int" resultMap="mymapping"> <!-- 属性名和字段名不一样，也可以使用resultmap=对应的映射 -->
		select eid,ename,eage from emp where eid = #{id}
	</select>
</mapper>

